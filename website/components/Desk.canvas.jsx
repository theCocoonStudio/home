/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: James (https://sketchfab.com/James_999)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/desk-95fe0ea09f97465fb5183573b44f2b7b
Title: Desk
*/
import Model from 'website/assets/Desk/Desk.glb'
import { useGLTF } from '@react-three/drei'
import { forwardRef, useEffect, useImperativeHandle, useRef } from 'react'

export const Desk = forwardRef(function Desk({ children }, forwardedRef) {
  // refs
  const desk = useRef()
  const anchor = useRef()

  // model
  const { nodes, materials } = useGLTF(Model)

  useEffect(() => {
    materials.DeskMaterial.color.set('#111')
    materials.DeskMaterial.metalness = 0.7
    materials.DeskMaterial.roughness = 1

    // anchor left and front
    anchor.current.position.setZ(1)
    anchor.current.position.setX(0.15)
  }, [materials])

  // imperative handle
  useImperativeHandle(forwardedRef, () => desk.current, [])

  return (
    <>
      <group
        ref={desk}
        /* dispose={null} */
      >
        <group ref={anchor}>
          <group position={[0, 0.001, 0]} rotation={[-1.572, 0, 0]}>
            <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
              <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
                <mesh
                  castShadow
                  receiveShadow
                  geometry={nodes.Desk_DeskMaterial_0.geometry}
                  material={materials.DeskMaterial}
                />
                <mesh
                  castShadow
                  receiveShadow
                  geometry={nodes.Cupboard_DeskMaterial_0.geometry}
                  material={materials.DeskMaterial}
                />
                <mesh
                  castShadow
                  receiveShadow
                  geometry={nodes.Draw_DeskMaterial_0.geometry}
                  material={materials.DeskMaterial}
                />
              </group>
            </group>
          </group>
        </group>
        {children}
      </group>
    </>
  )
})

useGLTF.preload(Model)
