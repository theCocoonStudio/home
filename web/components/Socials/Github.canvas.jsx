/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 /Users/dialectic/Downloads/github.glb --transform 
Files: /Users/dialectic/Downloads/github.glb [775.08KB] > /Users/dialectic/repositories/thecocoonstudio/izzy/github-transformed.glb [68.04KB] (91%)
*/

import Model from 'public/models/github.glb'
import { useGLTF } from '@react-three/drei'
import { forwardRef, useEffect, useImperativeHandle, useRef } from 'react'
import { Vector3 } from 'three'

export const Github = forwardRef(function Github(
  { colorTheme, ...props },
  ref,
) {
  const { nodes } = useGLTF(Model)
  const group = useRef()
  useImperativeHandle(ref, () => group.current)

  useEffect(() => {
    nodes.Circle010.geometry.center()
    const scale = new Vector3(0.621, 0.41, 0.621)
    const { min, max } = nodes.Cube053.geometry.boundingBox
    const factor = 0.9 / (Math.abs(max.x) + Math.abs(min.x))

    nodes.Circle010.geometry.scale(
      factor * scale.x,
      factor * scale.y,
      factor * scale.z,
    )

    return () => {
      nodes.Circle010.geometry?.dispose()
      nodes.Cube054.geometry?.dispose()
    }
  }, [
    nodes.Circle010.geometry,
    nodes.Cube053.geometry.boundingBox,
    nodes.Cube054.geometry,
  ])

  return (
    <group ref={group} {...props}>
      <mesh
        position={0.003}
        name='Circle010'
        geometry={nodes.Circle010.geometry}
        rotation={[Math.PI / 2, 0, 0]}
      >
        <meshStandardMaterial
          roughness={0.2}
          metalness={0.4}
          color={colorTheme.white}
          opacity={0.8}
          transparent
        />
      </mesh>
    </group>
  )
})
useGLTF.preload(Model)
