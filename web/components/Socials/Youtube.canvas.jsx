/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 /Users/dialectic/Downloads/source/linkdin.glb --transform 
Files: /Users/dialectic/Downloads/source/linkdin.glb [703.37KB] > /Users/dialectic/repositories/thecocoonstudio/izzy/linkdin-transformed.glb [55.49KB] (92%)
*/
import Model from 'public/models/youtube.glb'
import { OrbitControls, useGLTF } from '@react-three/drei'
import { forwardRef, useImperativeHandle, useRef } from 'react'

export const Youtube = forwardRef(function Youtube(
  { colorTheme, ...props },
  ref,
) {
  const { nodes } = useGLTF(Model)
  const group = useRef()
  useImperativeHandle(ref, () => group.current)

  return (
    <group
      scale={[0.08, 0.08, 0.08]}
      rotation={[0, -Math.PI / 2, 0]}
      {...props}
      ref={group}
    >
      <OrbitControls />
      <mesh
        geometry={nodes.Object_4.geometry}
        /* material={materials.Material} */
        position={[0.8, 0, -0.7]}
        scale={1.5}
      >
        <meshStandardMaterial
          roughness={0.2}
          metalness={0.4}
          color={colorTheme.black}
          opacity={0.8}
          transparent
        />
      </mesh>
      <mesh
        geometry={nodes.Object_6.geometry}
        /* material={materials['Material.001']} */
        scale={[1.203, 3, 3.391]}
      >
        <meshStandardMaterial
          roughness={0.2}
          metalness={0.4}
          color={colorTheme.white}
          opacity={0.8}
          transparent
        />
      </mesh>
    </group>
  )
})
// useGLTF.preload(Model)
