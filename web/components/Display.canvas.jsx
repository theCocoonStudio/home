/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 /Users/dialectic/Downloads/display.glb --transform 
Files: /Users/dialectic/Downloads/display.glb [11.29MB] > /Users/dialectic/repositories/thecocoonstudio/izzy/display-transformed.glb [518.55KB] (95%)
Author: g33 (https://sketchfab.com/g33)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/interactive-display-on-10f6665ef8574146a4afeb30e6aefe8c
Title: Interactive display on
*/

import Model from 'public/models/display.glb'
import { useGLTF } from '@react-three/drei'
import { forwardRef, useImperativeHandle, useRef } from 'react'

export const Display = forwardRef(function Display({ ...props }, ref) {
  const { nodes, materials } = useGLTF(Model)
  const group = useRef()
  useImperativeHandle(ref, () => group.current)
  return (
    <group
      dispose={null}
      ref={group}
      {...props}
      rotation-y={-Math.PI / 2}
      scale={0.05}
    >
      <mesh
        geometry={nodes.Object_4.geometry}
        material={materials['Material.002']}
        position={[0, -0.004, 0.084]}
        scale={[0.026, 1.197, 2.305]}
      />
      <mesh
        geometry={nodes.Object_6.geometry}
        material={materials.black_glossy}
        position={[0, -0.004, 0.084]}
        scale={[0.026, 1.197, 2.305]}
      />
      <mesh
        geometry={nodes.Object_8.geometry}
        material={materials.plastique_gris}
        position={[0.023, -1.147, 0.084]}
        rotation={[-Math.PI, 0, -Math.PI / 2]}
        scale={[0.022, 0.003, 0.023]}
      />
      <mesh
        geometry={nodes.Object_10.geometry}
        material={materials.Demi_light}
        position={[0, -0.004, 0.084]}
        scale={[0.026, 1.197, 2.305]}
      />
      <mesh
        geometry={nodes.Object_13.geometry}
        material={materials.Metal}
        position={[0.011, -1.147, -1.44]}
        scale={[0.016, 0.014, 0.04]}
      />
      <mesh
        geometry={nodes.Object_14.geometry}
        material={materials.Gray_white_plastic}
        position={[0.011, -1.147, -1.44]}
        scale={[0.016, 0.014, 0.04]}
      />
      <mesh
        geometry={nodes.Object_42.geometry}
        material={materials.Plastic_Silver}
        position={[-0.093, -0.337, -2.067]}
        rotation={[-Math.PI / 2, Math.PI / 2, 0]}
        scale={[0.013, 0.014, 0.012]}
      />
      <mesh
        geometry={nodes.Object_45.geometry}
        material={materials.Black_Plastic}
        position={[-0.114, -0.083, -2.082]}
        rotation={[Math.PI, -Math.PI / 2, 0]}
        scale={[-0.009, 0.141, 0.06]}
      />
      <mesh
        geometry={nodes.Object_65.geometry}
        material={materials.BrushedMetal}
        position={[-0.107, -0.701, 2.232]}
        scale={[0.036, 0.035, 0.02]}
      />
      <mesh
        geometry={nodes.Object_69.geometry}
        material={materials.noir}
        position={[1.277, -0.004, 0.084]}
        scale={[0.026, 1.197, 2.305]}
      />
    </group>
  )
})
useGLTF.preload('/models/display.glb')
