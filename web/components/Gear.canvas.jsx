/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 /Users/dialectic/Downloads/gear.glb --transform 
Files: /Users/dialectic/Downloads/gear.glb [24.26KB] > /Users/dialectic/repositories/thecocoonstudio/izzy/gear-transformed.glb [4.08KB] (83%)
Author: Zoe Choi (https://sketchfab.com/caicai_00)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/3d-icon-gear-b03aab15697b41ba8f218d6deb4daec9
Title: 3D Icon gear
*/

import Model from 'public/models/gear.glb'
import { useGLTF } from '@react-three/drei'
import { forwardRef, useEffect, useImperativeHandle, useRef } from 'react'
import { useFrame } from '@react-three/fiber'

export const Gear = forwardRef(function Gear({ colorTheme, ...props }, ref) {
  const { nodes } = useGLTF(Model)

  const group = useRef()
  useImperativeHandle(ref, () => group.current)

  useEffect(() => {
    nodes.Object_2.geometry.center()
    const { min, max } = nodes.Object_2.geometry.boundingBox

    const factor = 0.75 / (Math.abs(max.x) + Math.abs(min.x))

    nodes.Object_2.geometry.scale(factor, factor / 6, factor)

    return () => {
      nodes.Object_2.geometry?.dispose()
    }
  }, [nodes.Object_2.geometry])

  useFrame((state, delta) => {
    group.current.rotation.z += (2 * Math.PI) / (15 / delta)
  })
  return (
    <group ref={group} {...props}>
      <mesh geometry={nodes.Object_2.geometry} rotation={[-Math.PI / 2, 0, 0]}>
        <meshStandardMaterial
          roughness={0.2}
          metalness={0.7}
          color={colorTheme.white}
          opacity={0.8}
          transparent
        />
      </mesh>
    </group>
  )
})
useGLTF.preload('/models/gear.glb')
